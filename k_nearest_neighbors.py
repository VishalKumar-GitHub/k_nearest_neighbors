# -*- coding: utf-8 -*-
"""k_nearest_neighbors.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pn0ykJ5C5-hMg4HATycj54SkusqV_QX4

# K-Nearest Neighbors
You should build a machine learning pipeline using a k-nearest neighbor model. In particular, you should do the following:
- Load the `mnist` dataset using [Pandas](https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html). You can find this dataset in the datasets folder.
- Split the dataset into training and test sets using [Scikit-Learn](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html). 
- Train and test a k-nearest neighbor model using [Scikit-Learn](https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html).
- Check the documentation to identify the most important hyperparameters, attributes, and methods of the model. Use them in practice.

Importing Libraries
"""

import pandas as pd
import sklearn.model_selection
import sklearn.neighbors
from sklearn.neighbors import KNeighborsClassifier
import sklearn.metrics

"""Loading Dataset"""

df = pd.read_csv("mnist.csv")
df = df.set_index('id')
df.head()

"""Splitting the Dataset into Training and Test Sets"""

x = df.drop(["class"], axis=1)
y = df["class"] 
x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x,y)

print("df:", df.shape)
print("x_train", x_train.shape)
print("x_test", x_test.shape)
print("y_train", y_train.shape)
print("y_test", y_test.shape)

"""Training the Model"""

neigh = KNeighborsClassifier(n_neighbors=5)
neigh.fit(x_train, y_train)

"""Testing the Model"""

y_predicted = neigh.predict(x_test)
accuracy = sklearn.metrics.accuracy_score(y_test, y_predicted)
accuracy